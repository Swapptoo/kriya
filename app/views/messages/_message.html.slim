- within_60_secs_from_previous = message.within_60_secs_from_previous?
.comment[class=('inline' if within_60_secs_from_previous)]
  - if message.user && message.user.picture
    - unless within_60_secs_from_previous
      .avatar
        - if message.user == message.room.user
          = image_tag message.user.picture
        - elsif message.user == message.room.manager
          = image_tag "square-logo.ico"
        - else
          = image_tag message.user.picture
  - if message.freelancer && message.freelancer.picture
    - unless within_60_secs_from_previous
      .avatar
        = image_tag message.freelancer.picture
  .content
    - unless within_60_secs_from_previous
      a.author
        - if message.user
          - if message.user == message.room.user
            - if (user || current_user) != message.room.manager
              = message.user.first_name
            - else
              = message.user.first_name
          - elsif message.user == message.room.manager
            ' Kriya Bot
          - else
            = message.user.first_name
        - if message.freelancer
          = message.freelancer.first_name
        
      .metadata
        .date
          = time_ago_in_words message.created_at
          '  ago
    .text
      - if message.image.file.present? && !(message.image.content_type.include? 'image')
        = link_to message.image.file.filename, message.image.url, target: "_blank"

      - else
        - if message.image.url(:thumb).present?
          = link_to image_tag(message.image.url(:thumb)), message.image.url(:thumb), class: "fluidbox"
        - else
          = auto_link message.body, html: { target: '_blank', rel: "nofollow" }
      - if message.attachment
        = message.attachment.html.html_safe
      - unless message.post.nil?
        = link_to post_path(message.post), :data => {:modal => true} do
          .post-dialog
            .title
              = Sanitize.fragment(truncate(message.post.title.strip, :length => 100, :escape => false), Sanitize::Config::RELAXED).html_safe
            .ui.divider
            .content
              = Sanitize.fragment(truncate(message.post.content.strip, :length => 100, :escape => false), Sanitize::Config::RELAXED).html_safe
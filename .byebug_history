c
data
data["id"]
da
ata["
params
stream_from "rooms:#{data['id'].to_i}:messages"
data['id'].to_i
ooms:#{data['id'].to_i}:messages
rooms:#{data['id'].to_i}:messages
c
data["id"]
n
c
params[:room_id]
n
c
params[:room_id]
params[:root_id]
n
message_params
exit
c
n
c
 c
c
@room.messages.includes(:user, :attachment, :post).last
@room.messages.includes(:user, :attachment, :post)
n
c
@room.messages.includes(:user, :attachment, :post)
@room.messages.includes(:user, :attachment, :post).length
@room.messages.includes(:user, :attachment, :post).order(:created_at).page(params[:page]).length
@room.messages.includes(:user, :attachment, :post).order(:created_at).page(params[:page]).first
@room.messages.includes(:user, :attachment, :post).order(:created_at).page(params[:page]).last
@room.messages.includes(:user, :attachment, :post).order(:created_at).page(params[:page])
@room.messages.includes(:user, :attachment, :post).last@room.messages.includes(:user, :attachment, :post).order(:created_at).page(params[:page])@room.messages.includes(:user, :attachment, :post).order(:created_at).page(params[:page])
@room.messages.includes(:user, :attachment, :post).last
@room.messages.includes(:user, :attachment, :post)
n
c
n
c
exit
c
n
c
@message
n
@message
#message
@message
n
c
n
c
cv
c
@room.messages.last
@room.messages
n
@room.messages.all
@room.messages
@roomn
n
c
@message
n
@post.id
n
c
n
c
pparams
n
c
params
c
exit
c
@post
c
post_params
@post
request.referer
c
n
next
nn
n
message_params
c
message.image.size
message.image.content_type
exit
n
c
message.body
message.image.file
message.image.url(:thumb)
message.image.url
message.image.file
message.image.content_type
message.image.content_type.include? 'image'
n
dfdadsf
n
c
n
c
n
c
n
message.body
n
message.
c
n
c
n
message.attachment
n
message.image.file.present?
n
message.image.url(:thumb)
n
message.created_at
n
c
n
message.image.file.present?
n
message.image.url(:thumb).present?
message.image.url(:thumb)
n
message.created_at
n
a
a.author
n
m
n
message.user == message.room.user
n
message.user.picture
n
c
cc
c
n
continue
message_params.tempfile
message_params
params[:temppfile]
@message
message_params
n
params
n
c
params
c
n
c
n
c
n
c
next
Room.find 1
params[:room_id]
params[:root_id]
room
@message
n
room
next
@message
next
message_params
params
exit
params
next
params
c
authdataaa
cc
c
next
authdata
next
session
cc
c
message.image.size
message.image.content_type
exit
n
c
message.body
message.image.file
message.image.url(:thumb)
message.image.url
message.image.file
message.image.content_type
message.image.content_type.include? 'image'
n
dfdadsf
n
c
n
c
n
c
n
message.body
n
message.
c
n
c
n
message.attachment
n
message.image.file.present?
n
message.image.url(:thumb)
n
message.created_at
n
c
n
message.image.file.present?
n
message.image.url(:thumb).present?
message.image.url(:thumb)
n
message.created_at
n
a
a.author
n
m
n
message.user == message.room.user
n
message.user.picture
n
c
cc
c
n
continue
message_params.tempfile
